// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persons.Infra.Data.Context;

namespace Persons.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200210192855_10-02-20")]
    partial class _100220
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Persons.Domain.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdUser")
                        .HasColumnName("Id_User")
                        .HasColumnType("bigint")
                        .HasMaxLength(100);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Accounts","Account");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IdUser = 1L,
                            Login = "vjQeBi/dPnPLFVDwZRJUHEE17h2i7Sjmwh188EcNgt7UuAugafd2c9OkojKw33mf0o/UopfzbeZALFQildtJUg==",
                            Password = "z8uY8pIDZ/SjS6/dQjksAkqzNXqQ2qL+GP8+UV/bZfDCqLZLF9X2QkgMUFZIqwUhX1HLTitxHSU54u23Erz+vA==",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("Persons.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Last_Name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("Roles")
                        .HasColumnType("smallint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Users","User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cpf = "85100790059",
                            Email = "85100790059",
                            LastName = "Pereira da Silva",
                            Name = "Lucas Gabriel",
                            Roles = (short)3,
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("Persons.Domain.Entities.Account", b =>
                {
                    b.HasOne("Persons.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
